// <auto-generated />
using System;
using Application.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Application.Database.Migrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20230629111046_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("Application.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Application.Entities.UserAnime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("AnimeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EpisodesTotal")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EpisodesWatched")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NextEpisode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PosterUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SecondsWatched")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserAnimes");
                });

            modelBuilder.Entity("Application.Entities.UserAnime", b =>
                {
                    b.HasOne("Application.Entities.User", null)
                        .WithMany("LastWatchedAnimes")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Application.Entities.User", b =>
                {
                    b.Navigation("LastWatchedAnimes");
                });
#pragma warning restore 612, 618
        }
    }
}
