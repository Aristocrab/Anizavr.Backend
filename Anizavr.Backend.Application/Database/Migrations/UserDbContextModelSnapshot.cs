// <auto-generated />
using System;
using Anizavr.Backend.Application.Database;
using Application.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Application.Database.Migrations
{
    [DbContext(typeof(UserDbContext))]
    partial class UserDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("Anizavr.Backend.Application.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("AnimeId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Anizavr.Backend.Application.Entities.TierlistAnime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("AnimeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EpisodesTotal")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Position")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PosterUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tierlist");
                });

            modelBuilder.Entity("Anizavr.Backend.Application.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Anizavr.Backend.Application.Entities.UserWatchedAnime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("AnimeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentEpisode")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EpisodesTotal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PosterUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserScore")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserWatchedAnimeList");
                });

            modelBuilder.Entity("Anizavr.Backend.Application.Entities.UserWatchingAnime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("AnimeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentEpisode")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EpisodesTotal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PosterUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("SecondsTotal")
                        .HasColumnType("REAL");

                    b.Property<int>("SecondsWatched")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserWatchingAnimeList");
                });

            modelBuilder.Entity("Anizavr.Backend.Application.Entities.WishlistAnime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("AnimeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EpisodesTotal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PosterUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Wishlist");
                });

            modelBuilder.Entity("Anizavr.Backend.Application.Entities.Comment", b =>
                {
                    b.HasOne("Anizavr.Backend.Application.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Anizavr.Backend.Application.Entities.TierlistAnime", b =>
                {
                    b.HasOne("Anizavr.Backend.Application.Entities.User", null)
                        .WithMany("Tierlist")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Anizavr.Backend.Application.Entities.UserWatchedAnime", b =>
                {
                    b.HasOne("Anizavr.Backend.Application.Entities.User", null)
                        .WithMany("WatchedAnime")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Anizavr.Backend.Application.Entities.UserWatchingAnime", b =>
                {
                    b.HasOne("Anizavr.Backend.Application.Entities.User", null)
                        .WithMany("CurrentlyWatchingAnime")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Anizavr.Backend.Application.Entities.WishlistAnime", b =>
                {
                    b.HasOne("Anizavr.Backend.Application.Entities.User", null)
                        .WithMany("Wishlist")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Anizavr.Backend.Application.Entities.User", b =>
                {
                    b.Navigation("CurrentlyWatchingAnime");

                    b.Navigation("Tierlist");

                    b.Navigation("WatchedAnime");

                    b.Navigation("Wishlist");
                });
#pragma warning restore 612, 618
        }
    }
}
